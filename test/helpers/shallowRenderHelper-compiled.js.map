{"version":3,"sources":["shallowRenderHelper.js"],"names":[],"mappings":";;;;;kBAkBwB,e;;AAXxB;;;;AACA;;;;;;AAEA;;;;;;;;AAVA;;;;;;;AAkBe,SAAS,eAAT,CAAyB,SAAzB,EAA6D;AAAA,MAAzB,KAAyB,uEAAjB,EAAiB;;AAC1E,MAAM,kBAAkB,+BAAU,cAAV,EAAxB;;AAD0E,oCAAV,QAAU;AAAV,YAAU;AAAA;;AAE1E,kBAAgB,MAAhB,CAAuB,gBAAM,aAAN,CAAoB,SAApB,EAA+B,KAA/B,EAAsC,SAAS,MAAT,GAAkB,CAAlB,GAAsB,QAAtB,GAAiC,SAAS,CAAT,CAAvE,CAAvB;AACA,SAAO,gBAAgB,eAAhB,EAAP;AACD","file":"shallowRenderHelper-compiled.js","sourcesContent":["/**\n * Function to get the shallow output for a given component\n * As we are using phantom.js, we also need to include the fn.proto.bind shim!\n *\n * @see http://simonsmith.io/unit-testing-react-components-without-a-dom/\n * @author somonsmith\n */\nimport React from 'react';\nimport TestUtils from 'react-addons-test-utils';\n\n/**\n * Get the shallow rendered component\n *\n * @param  {Object} component The component to return the output for\n * @param  {Object} props [optional] The components properties\n * @param  {Mixed} ...children [optional] List of children\n * @return {Object} Shallow rendered output\n */\nexport default function createComponent(component, props = {}, ...children) {\n  const shallowRenderer = TestUtils.createRenderer();\n  shallowRenderer.render(React.createElement(component, props, children.length > 1 ? children : children[0]));\n  return shallowRenderer.getRenderOutput();\n}\n"]}